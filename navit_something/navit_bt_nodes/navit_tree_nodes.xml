<?xml version="1.0"?>
<!--
  For instructions on using Groot and description of the following BehaviorTree nodes.
-->
<root>
    <TreeNodesModel>
        <!-- ############################### ACTION NODES ################################# -->
        <Action ID="ComputePathToPose">
            <input_port name="goal">Destination to plan to</input_port>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="server_name" default="/compute_path">remapped action server name.</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="planner_id"/>
        </Action>

        <Action ID="FollowPath">
            <input_port name="controller_id"/>
            <input_port name="server_name" default="/follow_path">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="path">Path to follow</input_port>
        </Action>

        <Action ID="PathToPoint">
            <input_port name="Controller_path" default="{task_path_ros}">...</input_port>
            <output_port  name="tracking_path" default="{task_point_ros}">...</output_port>
        </Action>

        <Action ID="CloseObstacleAvoidance">
            <input_port name="use_avoidance" default="false">...</input_port>
            <input_port name="server_timeout" default="1.0">...</input_port>
            <input_port name="service_name" default="/toggle_avoidance">...</input_port>
        </Action>

        <Action ID="TruncatePath">
            <input_port name="distance">Distance before goal to truncate</input_port>
            <input_port name="input_path">Path to truncate</input_port>
            <output_port name="output_path">Truncated path to utilize</output_port>
        </Action>

        <Action ID="ApproachDock">
            <!-- <input_port name="pre_charging_pose">from current pose (usually should be pre_dock_pose)</input_port> -->
            <input_port name="expected_dock_pose">for perception</input_port>
            <input_port name="controller_plugin_name">...</input_port>
            <input_port name="perception_plugin_name">...</input_port>
            <input_port name="filter_plugin_name" default="ekf_1">...</input_port>
            <input_port name="server_name" default="/approach_dock">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <output_port name="goal_reached">Approach DONE</output_port>
        </Action>

        <Action ID="FinalDock">
            <input_port name="dock_pose">Final dock pose</input_port>
            <input_port name="rotate_in_place">rotate_in_place</input_port>
            <input_port name="server_name" default="/final_dock">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <output_port name="dock_finished">Dock DONE</output_port>
        </Action>

        <Action ID="Wait">
            <input_port name="wait_duration">Wait time</input_port>
            <input_port name="server_name" default="/wait">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>

        <Action ID="BackUp">
            <input_port name="backup_dist" default="0.25">Distance to backup</input_port>
            <input_port name="backup_speed" default="0.05">Speed at which to backup</input_port>
            <input_port name="server_name" default="/backup">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>

        <Action ID="Rotate">
            <input_port name="rotate_rad" default="0.1">Rotate value in rad</input_port>
            <input_port name="rotate_speed" default="0.1">Rotate speed in rad/s</input_port>
            <input_port name="is_rotate_clockwise" default="true">Rotate direction defalt is clockwise</input_port>
            <input_port name="server_name" default="/rotate">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>

        <Action ID="ClearEntireCostmap">
            <input_port name="server_timeout" default="0.5">Service name</input_port>
            <input_port name="service_name" default="clear_planner_costmap">Service name</input_port>
        </Action>

        <Action ID="RemovePassedGoals">
            <input_port name="input_goals">Original goals to remove viapoints from</input_port>
            <input_port name="input_path">Original Global Planner Path</input_port>
            <input_port name="radius" default="0.2">radius to goal for it to be considered for removal</input_port>
            <output_port name="output_goals">Goals with passed viapoints removed(truncated goals)</output_port>
        </Action>

        <Action ID="GetStationPose">
            <input_port name="service_name" default="/get_map_station_pose">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="station">station name or id.</input_port>
            <output_port name="station_pose">The pose of the station.</output_port>
        </Action>

        <Action ID="GetRoutePath">
            <input_port name="service_name" default="/get_map_route_path">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="route">The route such as LM1, LM2, LM3, LM9.</input_port>
            <input_port name="distance_interval">The distance interval to gen path.</input_port>
            <output_port name="start">The start station of the route.</output_port>
            <output_port name="end">The end station of the route.</output_port>
            <output_port name="route_path">The path of the route.</output_port>
        </Action>

        <Action ID="GetAreaEdge">
            <input_port name="area">The area such as A1.</input_port>
            <output_port name="edge_path">The edge of the area.</output_port>
            <input_port name="server_timeout">...</input_port>
            <input_port default="/get_map_area_edge" name="service_name">remapped action server name</input_port>
        </Action>

        <Action ID="CoveragePath">
            <input_port name="server_name" default="/get_map_station_pose">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="start_pose">Start pose to start coverage.</input_port>
            <input_port name="edge_path">Coverage path edge.</input_port>
            <input_port name="planner_id">Planner_plugin.</input_port>
            <output_port name="path_found">Path found.</output_port>
            <output_port name="path">Coverage path out.</output_port>
        </Action>

        <Action ID="FetchItemAction">
            <input_port name="in_items">get string item from vector string.</input_port>
            <output_port name="out_item">fetch string item in order.</output_port>
        </Action>

        <Action ID="PrintBlackboardValue">
            <input_port name="target_point">Cufrrent position of the agent</input_port>
        </Action>

        <Action ID="SynchronizeNeFilesService">
            <input_port name="service_name" default="/get_map_route_path">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="nodes_path">Nodes file path</input_port>
            <input_port name="edges_path">Edges file path</input_port>
        </Action>

        <Action ID="GetPlannerPluginService">
        </Action>

        <Action ID="IsPreciseArrivalAction">
        </Action>

        <Action ID="NemComputePathToPoseAction">
            <input_port name="goal">Destination to plan to</input_port>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="server_name" default="/compute_path">remapped action server name.</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="planner_id"/>
            <input_port name="closest_id"/>

        </Action>

        <Action ID="GetClosestId">
            <input_port name="current_pos">...</input_port>
            <input_port name="nodes_path">Nodes file path</input_port>
            <output_port name="closest_id">The closest id</output_port>
        </Action>

        <Action ID="GetControllerPluginService">
        </Action>

        <!-- ############################### auto mower  ###########################-->
        <Action ID="GetSelectionPolygonService">
            <input_port name="service_name" default="/get_selection">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="is_saved">do you need to get a saved polygon from the server?</input_port>
            <input_port name="saved_path">path to the saved polygon file</input_port>
            <output_port name="polygon">get polygon points from server</output_port>
        </Action>

        <Action ID="LoadPolygonJsonService">
            <input_port name="service_name" default="/load_json_data">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="json_file_path">path of the polygon to get from the server</input_port>
        </Action>

        <Action ID="TaskReceiverAction">
            <input_port name="grpc_enable" default="true">grpc enable.</input_port>
            <input_port name="grpc_port" default="50051">...</input_port>
            <output_port name="cmd">receive cmd.</output_port>
            <output_port name="cmd_param_go_pose">go pose param.</output_port>
            <output_port name="cmd_param_go_path">go path stations param.</output_port>
            <output_port name="cmd_param_go_coverage">go coverage areas param.</output_port>
        </Action>
        <!-- ############################### j110  ###########################-->
        <Action ID="TaskMapParserAction">
            <output_port name="task_polygons">task polygons</output_port>
            <output_port name="task_paths">task_paths</output_port>
            <output_port name="task_points">task_points</output_port>
        </Action>

        <Action ID="TaskCommandAction">
            <input_port name="task_polygons">Min battery % or voltage before triggering</input_port>
            <input_port name="task_paths">Topic for battery info</input_port>
            <input_port name="task_points">Bool if check based on voltage or total %</input_port>
            <input_port name="final_dock_distance"> dis ahead of ...</input_port>
            
            <output_port name="task_cmd_updated">task_cmd_updated</output_port>
            <output_port name="task_polygon">task_polygon</output_port>
            <output_port name="task_path">task_path</output_port>
            <output_port name="task_point">task_point</output_port>
            <output_port name="task_cmd">task_cmd</output_port>
            <output_port name="task_path_ros">task_path_ros</output_port>
            <output_port name="task_pose_ros">task_pose_ros</output_port>
            <output_port name="nearby_charge_pose_ros">task_path_ros</output_port>
            <output_port name="charge_pose_ros">charge_pose_ros</output_port>
            <output_port name="task_polygon_ids">task polygon ids</output_port>
            <output_port name="task_goal_area_id">task_goal_area_id</output_port>
            <output_port name="task_via_area_ids">task_via_area_ids</output_port>

            <output_port name="repeat_times">repeat_times</output_port>
        </Action>

        <Action ID="PWHCoveragePlannerAction">
            <input_port name="server_name" default="/polygon_coverage_path">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="task_polygon">task_polygon</input_port>
            <input_port name="plugin_name">coverage path planner name</input_port>
            <output_port name="coverage_whole_path">coverage path</output_port>
            <output_port name="path_updated">coverage path update</output_port>
        </Action>

        <Action ID="GetPathFirstPointAction">
            <input_port name="follow_path_ros">follow_path_ros</input_port>
            <output_port name="task_path_first_pose">first pose</output_port>
        </Action>

        <Action ID="RoutingAction">
            <input_port name="server_name" default="/routing">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="task_polygons">task polygon</input_port>
            <input_port name="task_paths">task paths</input_port>
            <input_port name="start_area">start area</input_port>
            <input_port name="via_areas">via areas</input_port>
            <input_port name="goal_area">goal area</input_port>
            <output_port name="is_cross_region">is cross region</output_port>
            <output_port name="via_indexes">via indexes</output_port>
            <output_port name="via_nums">via indexes</output_port>

        </Action>

        <Action ID="SwitchMapService">
            <input_port name="server_timeout" default="0.5">Service name</input_port>
            <input_port name="service_name" default="/navit/switch_map">Service name</input_port>
            <input_port name="switch_map_name">rswitch map name</input_port>
        </Action>

        <Action ID="GetDriveableAreaId">
            <input_port name="task_polygons">task polygons</input_port>
            <input_port name="current_pos">current pos</input_port>
            <output_port name="current_area_id">current area id</output_port>
            <output_port name="multi_task_polygon">multi_task_polygon</output_port>

        </Action>

        <Action ID="HandleViaPoints">
            <input_port name="task_polygons">task polygons</input_port>
            <input_port name="task_paths">task_paths</input_port>
            <input_port name="via_indexes">via_indexes</input_port>

            <output_port name="via_indexes_finished">via_indexes_finished</output_port>
            <output_port name="multi_teaching_path_ros">multi_teaching_path_ros</output_port>
            <output_port name="task_nums">task_nums</output_port>
        </Action>

        <Action ID="ResetValueAction">
            <input_port name="task_nums">task_nums</input_port>
        </Action>

        <Action ID="TaskPlanEditorAction">
            <input_port name="task_plan">task_plan</input_port>
            <input_port name="recorder">recorder</input_port>
            <input_port name="jump">jump</input_port>

            <output_port name="ref_plan">ref_plan</output_port>
        </Action>

        <Action ID="TaskPlanRecorderAction">
            <input_port name="task_plan">task_plan</input_port>
            <input_port name="near">near</input_port>
            <input_port name="search">search</input_port>
            <input_port name="capture">capture</input_port>
            <input_port name="attach">attach</input_port>
            
            <inout_port name="recorder">recorder</inout_port>
            <inout_port name="on_taskplan">on_taskplan</inout_port>
        </Action>

        <Action ID="TaskPlanReporterAction">
            <input_port name="task_plan">task_plan</input_port>
            <input_port name="recorder">recorder</input_port>

            <output_port name="completion_percentage">completion_percentage</output_port>
            <output_port name="clean_percentage">clean_percentage</output_port>
        </Action>

        <Action ID="ClearMapAction">
            <input_port name="map_name">map_name</input_port>
        </Action>

        <Action ID="CtrlObstacleLayerAction">
            <input_port name="map_name">map_name</input_port>
            <input_port name="enable">enable</input_port>
        </Action>

        <Action ID="SelectGoalOnPlanAction">
            <input_port name="ref_plan">ref_plan</input_port>
            <input_port name="distance">distance</input_port>
            <input_port name="jump">jump</input_port>
            <input_port name="timeout">timeout</input_port>

            <output_port name="goal">goal</output_port>
            <output_port name="goal_index">goal_index</output_port>

            <inout_port name="start">start</inout_port>
        </Action>

        <Action ID="MergePlansAction">
            <input_port name="plan0">plan0</input_port>
            <input_port name="plan1">plan1</input_port>
            <input_port name="knot">knot</input_port>

            <output_port name="merged_plan">merged_plan</output_port>
        </Action>

        <Action ID="MoveBackAction">
            <input_port name="back">back</input_port>
            <input_port name="speed">speed</input_port>
        </Action>

        <Action ID="PlanSecurityCheckingAction">
            <input_port name="start">start</input_port>
            <input_port name="server_name">server name</input_port>
            <input_port name="server_timeout">timeout</input_port>
            <input_port name="plan">plan</input_port>
            <input_port name="check_distance">check_distance</input_port>

            <output_port name="collised">collised</output_port>
            <output_port name="collised_indexes">collised_indexes</output_port>
        </Action>

        <Action ID="SelectStartOnPlanAction">
            <input_port name="ref_plan">ref_plan</input_port>
            <input_port name="collised_indexes">collised_indexes</input_port>
            <input_port name="jump">jump</input_port>

            <inout_port name="start">start</inout_port>
        </Action>

        <Action ID="ExcapeAction">
            <input_port name="timeout">timeout</input_port>
            <input_port name="free">free</input_port>
            <input_port name="v">v</input_port>
            <input_port name="w">w</input_port>
            <input_port name="r">r</input_port>
        </Action>

        <!-- ############################### CONDITION NODES ############################## -->
        <Condition ID="IsBatteryLow">
            <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
            <input_port name="battery_topic">Topic for battery info</input_port>
            <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
        </Condition>

        <Condition ID="GoalUpdated">
            <input_port name="goal_updated">Is goal updated</input_port>
        </Condition>
        <!-- ############################### CONTROL NODES ################################ -->
        <Control ID="PipelineSequence"/>

        <Control ID="RecoveryNode">
            <input_port name="number_of_retries">Number of retries</input_port>
        </Control>

        <Control ID="FinalSucceedLoop">
            <input_port name="timeout">node control time limit</input_port>
        </Control>

        <Control ID="SeqExecuteFinalRecovery"/>
        <!-- ############################### DECORATOR NODES ############################## -->
        <Decorator ID="RateController">
            <input_port name="hz">Rate</input_port>
        </Decorator>

        <Decorator ID="GoalUpdater">
            <input_port name="input_goal">Original goal in</input_port>
            <input_port name="is_docking">is docking?</input_port>
            <input_port name="can_be_preempted">is preempted?</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
            <output_port name="goal_updated">whether goal is updated</output_port>
        </Decorator>

        <Decorator ID="WayPoints">
            <input_port name="input_goal">Original goal in</input_port>
            <input_port name="simple_goal_topic" default="move_base_simple/goal">simple goal name</input_port>
            <input_port name="way_points_topic" default="way_points">way points topic name</input_port>
            <input_port name="max_loop" default="0">max loop number, zero or negative means inf.</input_port>
            <input_port name="jump_goal" default="false">True for new received simple goal will replace current goal in
                loop; false for following current goal in loop after arrived simple goal
            </input_port>
            <input_port name="accept_new_goal" default="true">True for new goal receive</input_port>
            <input_port name="goal_without_loop" default="false">True for new goal to stop all way-points LOOP; false
                for restart remain loop
            </input_port>
            <input_port name="path" default="{path}">Global path</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
        </Decorator>

        <Decorator ID="ViaPoints">
            <input_port name="topic_name" default="/via_points">via points topic name</input_port>
            <output_port name="output_path">following via points path</output_port>
        </Decorator>

        <Decorator ID="SelectNearestPose">
            <input_port name="reference_path">Reference path</input_port>
            <input_port name="current_pos">Current position of the agent</input_port>
            <input_port name="step_length" default="0.2">Step length to the next target point</input_port>
            <output_port name="target_point">Selected target point in the reference path</output_port>
        </Decorator>

        <Decorator ID="GetPositionInFrame">
            <input_port name="frame_id" default="map">Target frame id</input_port>
            <output_port name="current_pos">Robot current position</output_port>
        </Decorator>

        <Decorator ID="IgnoreDecorator">
            <input_port name="ignore_count">ignore_count</input_port>
        </Decorator>
    </TreeNodesModel>
</root>
