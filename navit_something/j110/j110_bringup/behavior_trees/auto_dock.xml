<?xml version="1.0"?>
<root main_tree_to_execute="BehaviorTree">
    <!-- ////////// -->
    <BehaviorTree ID="BehaviorTree">
        <Sequence>
            <IfThenElse>
                <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="" value_B="true">
                    <AlwaysSuccess/>
                </BlackboardCheckBool>
                <Sequence>
                    <Action ID="ComputePathToPose" goal="" path="" planner_id="" server_name="/compute_path" server_timeout="" start=""/>
                    <Action ID="FollowPath" controller_id="" path="" server_name="/follow_path" server_timeout=""/>
                </Sequence>
                <AlwaysSuccess/>
            </IfThenElse>
            <Action ID="ApproachDock" controller_plugin_name="" expected_dock_pose="" filter_plugin_name="ekf_1" goal_reached="" perception_plugin_name="" server_name="/approach_dock" server_timeout=""/>
            <Action ID="FinalDock" dock_finished="" dock_pose="" rotate_in_place="" server_name="/final_dock" server_timeout=""/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="ApproachDock">
            <input_port name="controller_plugin_name">...</input_port>
            <input_port name="expected_dock_pose">for perception</input_port>
            <input_port default="ekf_1" name="filter_plugin_name">...</input_port>
            <output_port name="goal_reached">Approach DONE</output_port>
            <input_port name="perception_plugin_name">...</input_port>
            <input_port default="/approach_dock" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>
        <Action ID="BackUp">
            <input_port default="0.25" name="backup_dist">Distance to backup</input_port>
            <input_port default="0.05" name="backup_speed">Speed at which to backup</input_port>
            <input_port default="/backup" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>
        <Action ID="ClearEntireCostmap">
            <input_port default="0.5" name="server_timeout">Service name</input_port>
            <input_port default="clear_planner_costmap" name="service_name">Service name</input_port>
        </Action>
        <Action ID="ComputePathToPose">
            <input_port name="goal">Destination to plan to</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port default="/compute_path" name="server_name">remapped action server name.</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="CoveragePath">
            <input_port name="edge_path">Coverage path edge.</input_port>
            <output_port name="path">Coverage path out.</output_port>
            <output_port name="path_found">Path found.</output_port>
            <input_port name="planner_id">Planner_plugin.</input_port>
            <input_port default="/get_map_station_pose" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="start_pose">Start pose to start coverage.</input_port>
        </Action>
        <Action ID="FetchItemAction">
            <input_port name="in_items">get string item from vector string.</input_port>
            <output_port name="out_item">fetch string item in order.</output_port>
        </Action>
        <Action ID="FinalDock">
            <output_port name="dock_finished">Dock DONE</output_port>
            <input_port name="dock_pose">Final dock pose</input_port>
            <input_port name="rotate_in_place">rotate_in_place</input_port>
            <input_port default="/final_dock" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>
        <Action ID="FollowPath">
            <input_port name="controller_id"/>
            <input_port name="path">Path to follow</input_port>
            <input_port default="/follow_path" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>
        <Action ID="GetAreaEdge">
            <input_port name="area">The area such as A1.</input_port>
            <output_port name="edge_path">The edge of the area.</output_port>
            <input_port name="server_timeout">...</input_port>
            <input_port default="/get_map_area_edge" name="service_name">remapped action server name</input_port>
        </Action>
        <Action ID="GetClosestId">
            <output_port name="closest_id">The closest id</output_port>
            <input_port name="current_pos">...</input_port>
            <input_port name="nodes_path">Nodes file path</input_port>
        </Action>
        <Action ID="GetControllerPluginService"/>
        <Action ID="GetDriveableAreaId">
            <output_port name="current_area_id">current area id</output_port>
            <input_port name="current_pos">current pos</input_port>
            <output_port name="multi_task_polygon">multi_task_polygon</output_port>
            <input_port name="task_polygons">task polygons</input_port>
        </Action>
        <Action ID="GetPathFirstPointAction">
            <input_port name="follow_path_ros">follow_path_ros</input_port>
            <output_port name="task_path_first_pose">first pose</output_port>
        </Action>
        <Action ID="GetPlannerPluginService"/>
        <Decorator ID="GetPositionInFrame">
            <output_port name="current_pos">Robot current position</output_port>
            <input_port default="map" name="frame_id">Target frame id</input_port>
        </Decorator>
        <Action ID="GetRoutePath">
            <input_port name="distance_interval">The distance interval to gen path.</input_port>
            <output_port name="end">The end station of the route.</output_port>
            <input_port name="route">The route such as LM1, LM2, LM3, LM9.</input_port>
            <output_port name="route_path">The path of the route.</output_port>
            <input_port name="server_timeout">...</input_port>
            <input_port default="/get_map_route_path" name="service_name">remapped action server name</input_port>
            <output_port name="start">The start station of the route.</output_port>
        </Action>
        <Action ID="GetSelectionPolygonService">
            <input_port name="is_saved">do you need to get a saved polygon from the server?</input_port>
            <output_port name="polygon">get polygon points from server</output_port>
            <input_port name="saved_path">path to the saved polygon file</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port default="/get_selection" name="service_name">remapped action server name</input_port>
        </Action>
        <Action ID="GetStationPose">
            <input_port name="server_timeout">...</input_port>
            <input_port default="/get_map_station_pose" name="service_name">remapped action server name</input_port>
            <input_port name="station">station name or id.</input_port>
            <output_port name="station_pose">The pose of the station.</output_port>
        </Action>
        <Condition ID="GoalUpdated">
            <input_port name="goal_updated">Is goal updated</input_port>
        </Condition>
        <Decorator ID="GoalUpdater">
            <input_port name="can_be_preempted">is preempted?</input_port>
            <output_port name="goal_updated">whether goal is updated</output_port>
            <input_port name="input_goal">Original goal in</input_port>
            <input_port name="is_docking">is docking?</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
        </Decorator>
        <Action ID="HandleViaPoints">
            <output_port name="multi_teaching_path_ros">multi_teaching_path_ros</output_port>
            <output_port name="task_nums">task_nums</output_port>
            <input_port name="task_paths">task_paths</input_port>
            <input_port name="task_polygons">task polygons</input_port>
            <input_port name="via_indexes">via_indexes</input_port>
            <output_port name="via_indexes_finished">via_indexes_finished</output_port>
        </Action>
        <Condition ID="IsBatteryLow">
            <input_port name="battery_topic">Topic for battery info</input_port>
            <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
            <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
        </Condition>
        <Action ID="LoadPolygonJsonService">
            <input_port name="json_file_path">path of the polygon to get from the server</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port default="/load_json_data" name="service_name">remapped action server name</input_port>
        </Action>
        <Action ID="NemComputePathToPoseAction">
            <input_port name="closest_id"/>
            <input_port name="goal">Destination to plan to</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port default="/compute_path" name="server_name">remapped action server name.</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="PWHCoveragePlannerAction">
            <output_port name="coverage_whole_path">coverage path</output_port>
            <output_port name="path_updated">coverage path update</output_port>
            <input_port name="plugin_name">coverage path planner name</input_port>
            <input_port default="/polygon_coverage_path" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="task_polygon">task_polygon</input_port>
        </Action>
        <Control ID="PipelineSequence"/>
        <Action ID="PrintBlackboardValue">
            <input_port name="target_point">Cufrrent position of the agent</input_port>
        </Action>
        <Decorator ID="RateController">
            <input_port name="hz">Rate</input_port>
        </Decorator>
        <Control ID="RecoveryNode">
            <input_port name="number_of_retries">Number of retries</input_port>
        </Control>
        <Action ID="RemovePassedGoals">
            <input_port name="input_goals">Original goals to remove viapoints from</input_port>
            <input_port name="input_path">Original Global Planner Path</input_port>
            <output_port name="output_goals">Goals with passed viapoints removed(truncated goals)</output_port>
            <input_port default="0.2" name="radius">radius to goal for it to be considered for removal</input_port>
        </Action>
        <Action ID="Rotate">
            <input_port default="true" name="is_rotate_clockwise">Rotate direction defalt is clockwise</input_port>
            <input_port default="0.1" name="rotate_rad">Rotate value in rad</input_port>
            <input_port default="0.1" name="rotate_speed">Rotate speed in rad/s</input_port>
            <input_port default="/rotate" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
        </Action>
        <Action ID="RoutingAction">
            <input_port name="goal_area">goal area</input_port>
            <output_port name="is_cross_region">is cross region</output_port>
            <input_port default="/routing" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="start_area">start area</input_port>
            <input_port name="task_paths">task paths</input_port>
            <input_port name="task_polygons">task polygon</input_port>
            <input_port name="via_areas">via areas</input_port>
            <output_port name="via_indexes">via indexes</output_port>
            <output_port name="via_nums">via indexes</output_port>
        </Action>
        <Decorator ID="SelectNearestPose">
            <input_port name="current_pos">Current position of the agent</input_port>
            <input_port name="reference_path">Reference path</input_port>
            <input_port default="0.2" name="step_length">Step length to the next target point</input_port>
            <output_port name="target_point">Selected target point in the reference path</output_port>
        </Decorator>
        <Action ID="SwitchMapService">
            <input_port default="0.5" name="server_timeout">Service name</input_port>
            <input_port default="/navit/switch_map" name="service_name">Service name</input_port>
            <input_port name="switch_map_name">rswitch map name</input_port>
        </Action>
        <Action ID="SynchronizeNeFilesService">
            <input_port name="edges_path">Edges file path</input_port>
            <input_port name="nodes_path">Nodes file path</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port default="/get_map_route_path" name="service_name">remapped action server name</input_port>
        </Action>
        <Action ID="TaskCommandAction">
            <output_port name="charge_pose_ros">charge_pose_ros</output_port>
            <input_port name="final_dock_distance"> dis ahead of ...</input_port>
            <output_port name="nearby_charge_pose_ros">task_path_ros</output_port>
            <output_port name="repeat_times">repeat_times</output_port>
            <output_port name="task_cmd">task_cmd</output_port>
            <output_port name="task_cmd_updated">task_cmd_updated</output_port>
            <output_port name="task_goal_area_id">task_goal_area_id</output_port>
            <output_port name="task_path">task_path</output_port>
            <output_port name="task_path_ros">task_path_ros</output_port>
            <input_port name="task_paths">Topic for battery info</input_port>
            <output_port name="task_point">task_point</output_port>
            <input_port name="task_points">Bool if check based on voltage or total %</input_port>
            <output_port name="task_polygon">task_polygon</output_port>
            <output_port name="task_polygon_ids">task polygon ids</output_port>
            <input_port name="task_polygons">Min battery % or voltage before triggering</input_port>
            <output_port name="task_pose_ros">task_pose_ros</output_port>
            <output_port name="task_via_area_ids">task_via_area_ids</output_port>
        </Action>
        <Action ID="TaskMapParserAction">
            <output_port name="task_paths">task_paths</output_port>
            <output_port name="task_points">task_points</output_port>
            <output_port name="task_polygons">task polygons</output_port>
        </Action>
        <Action ID="TaskReceiverAction">
            <output_port name="cmd">receive cmd.</output_port>
            <output_port name="cmd_param_go_coverage">go coverage areas param.</output_port>
            <output_port name="cmd_param_go_path">go path stations param.</output_port>
            <output_port name="cmd_param_go_pose">go pose param.</output_port>
            <input_port default="true" name="grpc_enable">grpc enable.</input_port>
            <input_port default="50051" name="grpc_port">...</input_port>
        </Action>
        <Action ID="TruncatePath">
            <input_port name="distance">Distance before goal to truncate</input_port>
            <input_port name="input_path">Path to truncate</input_port>
            <output_port name="output_path">Truncated path to utilize</output_port>
        </Action>
        <Decorator ID="ViaPoints">
            <output_port name="output_path">following via points path</output_port>
            <input_port default="/via_points" name="topic_name">via points topic name</input_port>
        </Decorator>
        <Action ID="Wait">
            <input_port default="/wait" name="server_name">remapped action server name</input_port>
            <input_port name="server_timeout">...</input_port>
            <input_port name="wait_duration">Wait time</input_port>
        </Action>
        <Decorator ID="WayPoints">
            <input_port default="true" name="accept_new_goal">True for new goal receive</input_port>
            <input_port default="false" name="goal_without_loop">True for new goal to stop all way-points LOOP; false
                for restart remain loop
            </input_port>
            <input_port name="input_goal">Original goal in</input_port>
            <input_port default="false" name="jump_goal">True for new received simple goal will replace current goal in
                loop; false for following current goal in loop after arrived simple goal
            </input_port>
            <input_port default="0" name="max_loop">max loop number, zero or negative means inf.</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
            <input_port default="{path}" name="path">Global path</input_port>
            <input_port default="move_base_simple/goal" name="simple_goal_topic">simple goal name</input_port>
            <input_port default="way_points" name="way_points_topic">way points topic name</input_port>
        </Decorator>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
