<?xml version="1.0"?>
<root main_tree_to_execute="TaskCircleBlock">
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeFollowPath">
        <Sequence>
            <Action ID="ActionResetLocalPlanner"/>
            <SetBlackboard output_key="is_new_local_path" value="true"/>
            <SetBlackboard output_key="is_goal_arrived" value="false"/>
            <SetBlackboard output_key="is_finish_a2b_plan" value="false"/>
            <SetBlackboard output_key="local_path_planning_success" value="true"/>
            <SetBlackboard output_key="follow_path_error_code" value="0"/>
            <SetBlackboard output_key="local_planner_error_code" value="0"/>
            <SetBlackboard output_key="is_wall_start_arrival" value="false"/>
            <ForceSuccess>
                <KeepRunningUntilFailure>
                    <Sequence>
                        <SetBlackboard output_key="is_local_goal_arrived" value="false"/>
                        <Control ID="AsyParallelFailure">
                            <Decorator ID="TimedTrigger" time_ms="1000">
                                <ForceSuccess>
                                    <IfThenElse>
                                        <Action ID="ActionLocalPathPlanningAsy" error_code="{local_planner_error_code}" is_goal_arrived="{is_goal_arrived}" local_path="{current_path}" plugin_name="smac_local_hybirdastar"/>
                                        <Sequence>
                                            <SetBlackboard output_key="local_path_planning_success" value="true"/>
                                            <Action ID="ActionResetBackup" reset_flag="true"/>
                                        </Sequence>
                                        <SetBlackboard output_key="local_path_planning_success" value="false"/>
                                    </IfThenElse>
                                </ForceSuccess>
                            </Decorator>
                            <Decorator ID="TimedTrigger" time_ms="100">
                                <Sequence>
                                    <SubTree ID="SubTreeUpdateLocalPath" __shared_blackboard="true"/>
                                    <Sequence>
                                        <Action ID="ActionTrimLocalPath" trim_path="{updated_local_path}"/>
                                        <ForceSuccess>
                                            <Action ID="ActionFollowPathAsy" error_code="{follow_path_error_code}" is_local_goal_arrived="{is_local_goal_arrived}" plugin_name="pure_pursuit" target_path="{local_path}"/>
                                        </ForceSuccess>
                                        <SetBlackboard output_key="is_new_local_path" value="false"/>
                                    </Sequence>
                                    <Switch5 case_1="0" case_2="1" case_3="2" case_4="3" case_5="4" variable="{follow_path_error_code}">
                                        <Action ID="ActionSetVoiceBroadcast" voice_type="0"/>
                                        <Sequence>
                                            <Action ID="ActionSetVoiceBroadcast" voice_type="1"/>
                                            <Delay delay_msec="5000">
                                                <AlwaysSuccess/>
                                            </Delay>
                                            <SetBlackboard output_key="is_new_local_path" value="true"/>
                                        </Sequence>
                                        <Sequence>
                                            <SubTree ID="SubTreeFollowPathRecovery" __shared_blackboard="true"/>
                                            <SetBlackboard output_key="is_new_local_path" value="true"/>
                                        </Sequence>
                                        <Action ID="ActionSetVoiceBroadcast" voice_type="0"/>
                                        <SetBlackboard output_key="is_new_local_path" value="true"/>
                                        <Action ID="ActionSetVoiceBroadcast" voice_type="0"/>
                                    </Switch5>
                                </Sequence>
                            </Decorator>
                        </Control>
                        <Inverter>
                            <Sequence>
                                <Condition ID="IsMoveOnPath" deg_thres="15" dis_thres="0.2" path_start_index="" path_start_pose=""/>
                                <Condition ID="IsWallStartArrival" distance_thres="0.2" orien_thres_deg="15" wall_start_index="{wall_start_index}" wall_start_pose="{wall_start_pose}"/>
                                <SetBlackboard output_key="is_wall_start_arrival" value="true"/>
                                <SetBlackboard output_key="is_finish_a2b_plan" value="true"/>
                            </Sequence>
                        </Inverter>
                        <SubTree ID="SubTreeIsGoalReach" __shared_blackboard="true"/>
                    </Sequence>
                </KeepRunningUntilFailure>
            </ForceSuccess>
            <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="{is_wall_start_arrival}" value_B="true">
                <AlwaysSuccess/>
            </BlackboardCheckBool>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeFollowPathRecovery">
        <IfThenElse>
            <Sequence>
                <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="{is_goal_arrived}" value_B="true">
                    <AlwaysSuccess/>
                </BlackboardCheckBool>
                <BlackboardCheckInt return_on_mismatch="FAILURE" value_A="{local_planner_error_code}" value_B="2">
                    <AlwaysSuccess/>
                </BlackboardCheckInt>
            </Sequence>
            <ReactiveFallback>
                <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="{local_path_planning_success}" value_B="true">
                    <AlwaysSuccess/>
                </BlackboardCheckBool>
                <Delay delay_msec="1000">
                    <ForceFailure>
                        <SetBlackboard output_key="{is_finish_a2b_plan}" value="true"/>
                    </ForceFailure>
                </Delay>
            </ReactiveFallback>
            <ReactiveFallback>
                <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="{local_path_planning_success}" value_B="true">
                    <AlwaysSuccess/>
                </BlackboardCheckBool>
                <KeepRunningUntilFailure>
                    <ForceSuccess>
                        <Action ID="ActionBackup" distance="1.0" speed="0.1"/>
                    </ForceSuccess>
                </KeepRunningUntilFailure>
            </ReactiveFallback>
        </IfThenElse>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeFollowWallPath">
        <Fallback>
            <KeepRunningUntilFailure>
                <Sequence>
                    <Action ID="ActionUpdateWallTaskStatus" close_dist_err="1.0" close_yaw_err="30.0" deorbit_allow_dist="9999.0" enable_anticlockwise="true" task_status="task_status"/>
                    <Control ID="WallFollowTaskController" task_status="{task_status}">
                        <Action ID="ActionAddWallTrackPoint"/>
                        <Action ID="ActionProgressBar" angle_rang="0.51" dist_rang="3.0" jump_limit="0.5"/>
                        <Action ID="ActionFollowWall" boundary="{boundary}" plugin_name="ef"/>
                        <SubTree ID="SubTreeTaskRecovery" __shared_blackboard="true"/>
                        <SubTree ID="SubTreeTaskFinish" __shared_blackboard="true"/>
                    </Control>
                </Sequence>
            </KeepRunningUntilFailure>
            <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{task_status}" value_B="finish">
                <AlwaysSuccess/>
            </BlackboardCheckString>
        </Fallback>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeGoToPath">
        <Sequence>
            <Action ID="ActionSetCurrentFollowPath" source_path="{path2go}" target_path="{this_wall_path}"/>
            <Action ID="ActionGetPathPointWithFailureTimes" failure_times="3" index="{a2b_end_index}" path="{this_wall_path}" pose="{a2b_end_pose}" restart="true" rindex="{a2b_end_rindex}" step_length="0.5"/>
            <RetryUntilSuccessful num_attempts="100">
                <Fallback>
                    <Action ID="ActionA2BPathPlanning" current_path="{to_wall_path}" error_code="{a2b_error_code}" goal_pose="{a2b_end_pose}" plugin_name="topoint" use_start="false"/>
                    <ForceFailure>
                        <IfThenElse>
                            <BlackboardCheckInt return_on_mismatch="FAILURE" value_A="{a2b_error_code}" value_B="2">
                                <AlwaysSuccess/>
                            </BlackboardCheckInt>
                            <Action ID="ActionGetPathPointWithFailureTimes" failure_times="3" index="{a2b_end_index}" path="{this_wall_path}" pose="{a2b_end_pose}" restart="false" rindex="{a2b_end_rindex}" step_length="0.5"/>
                            <Action ID="ActionBackup" distance="0.5" speed="0.1"/>
                        </IfThenElse>
                    </ForceFailure>
                </Fallback>
            </RetryUntilSuccessful>
            <Action ID="ActionMergePathWithIndex" merged_path="{merged_path}" rindex="{a2b_end_rindex}" source_path="{to_wall_path}" target_path="{this_wall_path}"/>
            <Action ID="ActionSetCurrentFollowPath" source_path="{merged_path}" target_path="{current_path}"/>
            <SubTree ID="SubTreeFollowPath" __shared_blackboard="true"/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeGoToWallPath">
        <IfThenElse>
            <Condition ID="IsNewWallTask" boundary="boundary" wall_path="wall_path"/>
            <Sequence>
                <Action ID="ActionMoveWallStart" after_clostest_pose="2.5" boundary_forbidden_dist="2.3" fuzzy_dist="1.0" wall_path="{wall_path}"/>
                <Action ID="ActionSetPath" in_path="{wall_path}" out_path="path2go"/>
                <SubTree ID="SubTreeGoToPath" __shared_blackboard="true"/>
                <Action ID="ActionSetWallStartReach" progressbar_init_limit="0.95" progressbar_interval="0.75" tc_log_time="-1" tc_range="1.0" tc_sample_rate="5.0" wall_start_index="{wall_start_index}"/>
            </Sequence>
            <Fallback>
                <Condition ID="IsNearHistoryTrack" dist="1.0" yaw="0.51"/>
                <Sequence>
                    <Action ID="ActionSetPath" in_path="{wall_path}" out_path="path2go"/>
                    <SubTree ID="SubTreeGoToPath" __shared_blackboard="true"/>
                </Sequence>
            </Fallback>
        </IfThenElse>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeIsGoalReach">
        <Inverter>
            <Sequence>
                <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="{is_goal_arrived}" value_B="true">
                    <AlwaysSuccess/>
                </BlackboardCheckBool>
                <BlackboardCheckBool return_on_mismatch="FAILURE" value_A="{is_local_goal_arrived}" value_B="true">
                    <AlwaysSuccess/>
                </BlackboardCheckBool>
                <SetBlackboard output_key="{is_finish_a2b_plan}" value="true"/>
            </Sequence>
        </Inverter>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeRecovery">
        <RetryUntilSuccessful num_attempts="10">
            <Sequence>
                <SetBlackboard output_key="scene" value="0"/>
                <Action ID="ActionCurrentPoseCollisionChecker" padding="0.05" scene="{scene}"/>
                <BlackboardCheckInt return_on_mismatch="SUCCESS" value_A="{scene}" value_B="1">
                    <ForceFailure>
                        <Fallback>
                            <Action ID="ActionArcMotion" isfixed="false" target_distance="0.2" target_speed="0.2" target_yaw="0.5"/>
                            <Action ID="ActionSpin" angle="6.28" speed="0.1"/>
                        </Fallback>
                    </ForceFailure>
                </BlackboardCheckInt>
            </Sequence>
        </RetryUntilSuccessful>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeTaskFinish">
        <Sequence>
            <Action ID="ActionSetProgressBar" percentage="1"/>
            <Delay delay_msec="500">
                <AlwaysFailure/>
            </Delay>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeTaskRecovery">
        <Sequence>
            <Action ID="ActionRemainWallPath" jump="5.0" remain_path="{remain_wall_path}"/>
            <Action ID="ActionSetPath" in_path="{remain_wall_path}" out_path="path2go"/>
            <Action ID="ActionLeave" dir="0"/>
            <SubTree ID="SubTreeGoToPath" __shared_blackboard="true"/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="SubTreeUpdateLocalPath">
        <ForceSuccess>
            <Fallback>
                <Action ID="ActionUpdateLocalPath" expire_time_ms="5000" in_local_path="{current_path}" is_new_local_path="{is_new_local_path}" is_updated="{is_local_path_updated}" out_local_path="{updated_local_path}"/>
                <Sequence>
                    <Fallback>
                        <BlackboardCheckInt return_on_mismatch="FAILURE" value_A="{local_planner_error_code}" value_B="1">
                            <AlwaysSuccess/>
                        </BlackboardCheckInt>
                    </Fallback>
                    <SubTree ID="SubTreeFollowPathRecovery" __shared_blackboard="true"/>
                    <SetBlackboard output_key="is_new_local_path" value="true"/>
                </Sequence>
            </Fallback>
        </ForceSuccess>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="TaskCircleBlock">
        <IfThenElse>
            <Condition ID="IsGoToWall"/>
            <SubTree ID="SubTreeGoToWallPath" __shared_blackboard="true"/>
            <Sequence>
                <ForceSuccess>
                    <Condition ID="IsNewWallTask" boundary="boundary" wall_path="wall_path"/>
                </ForceSuccess>
                <SubTree ID="SubTreeFollowWallPath" __shared_blackboard="true"/>
            </Sequence>
        </IfThenElse>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="ActionA2BPathPlanning">
            <output_port default="{a2b_path}" name="current_path"/>
            <output_port default="{a2b_error_code}" name="error_code"/>
            <input_port default="{a2b_goal_pose}" name="goal_pose"/>
            <input_port default="topoint" name="plugin_name"/>
            <input_port default="false" name="use_start"/>
        </Action>
        <Action ID="ActionAddWallTrackPoint"/>
        <Action ID="ActionArcMotion">
            <input_port name="isfixed" type="bool"/>
            <input_port name="target_distance" type="float"/>
            <input_port name="target_speed" type="float"/>
            <input_port name="target_yaw" type="float"/>
        </Action>
        <Action ID="ActionBackup">
            <input_port default="0.5" name="distance"/>
            <input_port default="0.1" name="speed"/>
        </Action>
        <Action ID="ActionCoveragePathPlanning"/>
        <Action ID="ActionCurrentPoseCollisionChecker">
            <input_port name="padding" type="float"/>
            <output_port name="scene" type="int"/>
        </Action>
        <Action ID="ActionFollowPathAsy">
            <output_port default="{follow_path_error_code}" name="error_code"/>
            <output_port default="{is_local_goal_arrived}" name="is_local_goal_arrived"/>
            <input_port default="path_follow" name="plugin_name"/>
            <input_port default="{local_path}" name="target_path"/>
        </Action>
        <Action ID="ActionFollowWall">
            <input_port name="boundary"/>
            <input_port name="plugin_name"/>
        </Action>
        <Action ID="ActionGetCoverageStart">
            <input_port name="restart"/>
            <output_port default="{a2b_goal_pose}" name="start_pose"/>
            <input_port default="0.5" name="step_length"/>
        </Action>
        <Action ID="ActionGetPathPointWithFailureTimes">
            <input_port name="failure_times"/>
            <output_port name="index"/>
            <input_port name="path"/>
            <output_port name="pose"/>
            <inout_port name="restart"/>
            <output_port name="rindex"/>
            <input_port name="step_length"/>
        </Action>
        <Action ID="ActionGetWallStart"/>
        <Action ID="ActionLeave">
            <input_port default="0" name="dir"/>
        </Action>
        <Action ID="ActionLocalPathPlanningAsy">
            <output_port default="{local_planner_error_code}" name="error_code"/>
            <output_port default="false" name="is_goal_arrived"/>
            <output_port default="{local_path}" name="local_path"/>
            <input_port default="smac_local_astar" name="plugin_name"/>
        </Action>
        <Action ID="ActionMergePathWithIndex">
            <output_port name="merged_path"/>
            <input_port name="rindex"/>
            <input_port name="source_path"/>
            <input_port name="target_path"/>
        </Action>
        <Action ID="ActionMoveWallStart">
            <input_port name="after_clostest_pose"/>
            <input_port name="boundary_forbidden_dist"/>
            <input_port name="fuzzy_dist"/>
            <inout_port name="wall_path"/>
        </Action>
        <Action ID="ActionProgressBar">
            <input_port name="angle_rang" type="double"/>
            <input_port name="dist_rang" type="double"/>
            <input_port name="jump_limit" type="double"/>
        </Action>
        <Action ID="ActionRemainWallPath">
            <input_port name="jump" type="double"/>
            <output_port name="remain_path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="ActionResetBackup">
            <input_port default="true" name="reset_flag"/>
        </Action>
        <Action ID="ActionResetLocalPlanner"/>
        <Action ID="ActionSetCurrentFollowPath">
            <input_port name="source_path"/>
            <output_port name="target_path"/>
        </Action>
        <Action ID="ActionSetPath">
            <input_port name="in_path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
            <output_port name="out_path" type="nav_msgs::Path_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Action>
        <Action ID="ActionSetProgressBar">
            <input_port name="percentage" type="double"/>
        </Action>
        <Action ID="ActionSetVoiceBroadcast">
            <input_port default="0" name="voice_type"/>
        </Action>
        <Action ID="ActionSetWallPath">
            <input_port name="interval" type="double"/>
            <output_port name="wall_path_size" type="int"/>
        </Action>
        <Action ID="ActionSetWallStartReach">
            <input_port name="progressbar_init_limit"/>
            <input_port name="progressbar_interval"/>
            <input_port default="-1" name="tc_log_time"/>
            <input_port default="1.0" name="tc_range"/>
            <input_port default="5.0" name="tc_sample_rate"/>
            <input_port name="wall_start_index"/>
        </Action>
        <Action ID="ActionSpin">
            <input_port name="angle" type="float"/>
            <input_port name="speed" type="float"/>
        </Action>
        <Action ID="ActionTrimLocalPath">
            <inout_port default="{trim_path}" name="trim_path"/>
        </Action>
        <Action ID="ActionUpdateLocalPath">
            <input_port default="1000" name="expire_time_ms"/>
            <input_port default="{local_path}" name="in_local_path"/>
            <input_port default="{is_new_local_path}" name="is_new_local_path"/>
            <output_port default="{is_local_path_updated}" name="is_updated"/>
            <output_port default="{updated_local_path}" name="out_local_path"/>
        </Action>
        <Action ID="ActionUpdateWallTaskStatus">
            <input_port name="close_dist_err"/>
            <input_port name="close_yaw_err"/>
            <input_port default="99.0" name="deorbit_allow_dist"/>
            <input_port default="false" name="enable_anticlockwise"/>
            <output_port name="task_status"/>
        </Action>
        <Action ID="ActionWallFollowLeftRight">
            <input_port default="0.9" name="pass_score"/>
            <input_port default="1.8" name="wall_dist"/>
        </Action>
        <Action ID="ActionWallStartPathMerge">
            <output_port default="merged_path" name="merged_path"/>
        </Action>
        <Control ID="AsyParallelFailure"/>
        <Condition ID="IsFollowPathArrival">
            <input_port default="2.0" name="distance_threshold"/>
        </Condition>
        <Condition ID="IsGoToWall"/>
        <Condition ID="IsMoveOnPath">
            <input_port default="40" name="deg_thres"/>
            <input_port default="0.35" name="dis_thres"/>
            <input_port name="path_start_index"/>
            <input_port name="path_start_pose"/>
        </Condition>
        <Condition ID="IsNearHistoryTrack">
            <input_port name="dist"/>
            <input_port name="yaw"/>
        </Condition>
        <Condition ID="IsNewWallTask">
            <output_port name="boundary"/>
            <output_port name="wall_path"/>
        </Condition>
        <Condition ID="IsOnTarget">
            <input_port default="0.1" name="distance_thres"/>
            <input_port default="5" name="orien_thres_deg"/>
        </Condition>
        <Condition ID="IsPathStartArrival"/>
        <Condition ID="IsPreciseGoal"/>
        <Condition ID="IsWallPathBlocked">
            <input_port name="ahead"/>
            <input_port name="check_dist"/>
            <input_port name="dist_err"/>
            <input_port name="left_width"/>
            <input_port name="offset"/>
            <input_port name="right_width"/>
        </Condition>
        <Condition ID="IsWallStartArrival">
            <input_port name="distance_thres" type="float"/>
            <input_port name="orien_thres_deg" type="float"/>
            <output_port name="wall_start_index" type="int"/>
            <output_port name="wall_start_pose" type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void&gt; &gt;"/>
        </Condition>
        <Action ID="SetPath">
            <inout_port name="output_key"/>
            <input_port name="value"/>
        </Action>
        <SubTree ID="SubTree"/>
        <SubTree ID="SubTreeFollowPath">
            <input_port default="true" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeFollowPathRecovery">
            <inout_port default="true" name="__shared_blackboard"/>
        </SubTree>
        <SubTree ID="SubTreeFollowWallPath">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeGoToPath">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeGoToWallPath">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeIsGoalReach">
            <input_port default="true" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeRecovery">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeTaskFinish">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeTaskRecovery">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="SubTreeUpdateLocalPath">
            <inout_port name="__shared_blackboard"/>
        </SubTree>
        <Decorator ID="TimedTrigger">
            <input_port default="100" name="time_ms"/>
        </Decorator>
        <Control ID="WallFollowTaskController">
            <input_port name="task_status"/>
        </Control>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
